<?php
include_once 'includes/http.php';
include_once 'includes/oauth_client.php';

/**
 * Implements hook_menu().
 */
function citizen_login_menu() {
  // Config page.
  $items['admin/config/people/citizen-login'] = array(
    'title' => t('Citizen Login Settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('citizen_login_settings_form'),
    'access arguments' => array('administer users'),
    'description' => 'Configurar configurações para login cidadão',
    'type' => MENU_NORMAL_ITEM,
  );

  // Connect page.
  $items['user/citizen-login/connect'] = array(
    'title' => t('Connect'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
    'page callback' => 'citizen_login_connect',
  );

  return $items;
}


/**
 * Page constructor : Connect user function.
 */
function citizen_login_connect() {
  if (user_is_logged_in()) {
    return MENU_ACCESS_DENIED;
  }
  $configuration_file = drupal_get_path('module', 'citizen_login') . '/oauth_configuration.json';

  $client = new oauth_client_class($configuration_file);
  $client->debug = 1;
  $client->debug_http = 1;
  $client->server = 'Meu';
  $client->redirect_uri = 'http://' . $_SERVER['HTTP_HOST'] . base_path() . 'user/citizen-login/connect';
  $client->client_id = variable_get('citizen_login_client_id');

  $application_line = __LINE__ - 1;

  $client->client_secret = variable_get('citizen_login_app_secret');

  if (strlen($client->client_id) == 0 || strlen($client->client_secret) == 0) {
    return t('Please go to Meu RS Apps page https://meu.rs.gov.br/dev , ' . 'create an application, and in the line  @application_line set the client_id to Consumer key and client_secret with Consumer secret. The Callback URL must be @redirect_uri If you want to post to ' . 'the user timeline, make sure the application you create has write permissions', array('@application_line' => $application_line, ' @redirect_uri' => $client->redirect_uri));
  }

  // API Permissions.
  // Get scope and filter only to selected itens.
  $citizen_login_scope = variable_get('citizen_login_scope', NULL);
  foreach ($citizen_login_scope as $key => $value) {
    if (!$value) {
      unset($citizen_login_scope[$key]);
    }
  }
  $scope = array_values($citizen_login_scope);
  
  // Call hook alter.
  drupal_alter('citizen_login_scope', $scope);

  $client->scope = implode(' ', $scope);

  if (($success = $client->Initialize())) {
    if (($success = $client->Process())) {
      if (strlen($client->authorization_error)) {
        $client->error = $client->authorization_error;
        $success = false;
      }
      elseif (strlen($client->access_token)) {
        $success = $client->CallAPI('https://meu.rs.gov.br/api/v1/person', 'GET', array(), array(
            'FailOnAccessError' => true
        ), $user_rs);

        // Verify if user exists before try to create new account.
        $query = 'SELECT mail FROM users WHERE mail = :email';
        $result = db_query($query, array(':email' => $user_rs->email));

        if ($result->rowCount() == 0) {
          $user = citizen_login_create_user($user_rs);
          // Redirect to edit profile.
          drupal_goto("user/{$user->uid}/edit");
        }
        else {
          drupal_set_message('User already exists', 'error');
          drupal_goto('<front>');
          // Try reauthenticate user token?

          // Other things...
        }

      }
    }
  }
}

/**
 * Form constructor for login cidadao settings.
 *
 * @ingroup forms
 */
function citizen_login_settings_form($form, &$form_state) {
  // Client ID field.
  $form['citizen_login_client_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Client ID'),
    '#default_value' => variable_get('citizen_login_client_id', NULL),
  );
  // App Secret field.
  $form['citizen_login_app_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('App Secret'),
    '#default_value' => variable_get('citizen_login_app_secret', NULL),
  );
  
  // Scope to oauth
  
  // Actual full scope
  $scope = array('id', 'username', 'full_name', 'name', 'cpf', 'birthdate', 'email', 'city', 'picture', 'public_profile', 'voter_registration', 'badges', 'country', 'uf', 'city', 'adress', 'adress_number', 'adress_complement', 'rgs');
  
  $form['citizen_login_scope'] = array (
    '#type' => 'checkboxes',
    '#title'  => t('Scope'),
    '#options'  => drupal_map_assoc($scope),
    '#default_value'  => variable_get('citizen_login_scope', NULL),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_block_info().
 */
function citizen_login_block_info() {
  $blocks['citizen_login'] = array(
    'info' => t('Citizen\'s Login'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function citizen_login_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'citizen_login' :
      $block['content'] = theme('citizen_login_button');
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function citizen_login_theme() {
  return array(
    'citizen_login_button' => array(
      'function' => 'theme_citizen_login_button',
    ),
  );
}

/**
 * This function create new user.
 *
 * @param object $user_rs
 *   Login cidadão object.
 */
function citizen_login_create_user($user_rs) {
  $password = user_password();
  // User data.
  $new_user = array(
    'name' => $user_rs->username,
    'mail' => $user_rs->email,
    'init' => $user_rs->email,
    'access' => REQUEST_TIME,
    'status' => 1,
    'pass' => $password,
  );

  // Save user.
  $account = user_save(NULL, $new_user);
  // Change current user.
  global $user;
  $user = $account;

  drupal_set_message(t('Your password is @pass. Please change this.', array('@pass' => $password)), 'warning');

  return $account;
}

/*
 * Implements hook_form_alter().
 */
function citizen_login_form_user_login_alter(&$form, &$form_state, $form_id) {
  $btn = theme('citizen_login_button');
  $form['citizen-login-link'] = array(
    '#markup' => $btn,
  );
}

/**
 * Theme function for login button.
 */
function theme_citizen_login_button(&$variables) {
  $btn = l(t('Citizen\'s Login'), 'user/citizen-login/connect', array('attributes' => array('class' => array('btn-citizen-login'))));

  return $btn;
}
