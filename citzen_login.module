<?php
include_once 'includes/http.php';
include_once 'includes/oauth_client.php';

/**
 * Implements hook_menu().
 */
function citzen_login_menu() {
  // Config page.
  $items['admin/config/people/citzen-login'] = array(
    'title' => t('Citzen Login Settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('citzen_login_settings_form'),
    'access arguments' => array('administer users'),
    'description' => 'Configurar configurações para login cidadão',
    'type' => MENU_NORMAL_ITEM,
  );

  // Connect page.
  $items['user/citzen-login/connect'] = array(
    'title' => t('Connect'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
    'page callback' => 'citzen_login_connect',
  );

  return $items;
}


/**
 * Page constructor : Connect user function.
 */
function citzen_login_connect() {
  if (user_is_logged_in()) {
    return MENU_ACCESS_DENIED;
  }

  $client = new oauth_client_class();
  $client->debug = 1;
  $client->debug_http = 1;
  $client->server = 'Meu';
  $client->redirect_uri = 'http://' . $_SERVER['HTTP_HOST'] . base_path() . 'user/citzen-login/connect';
  $client->client_id = variable_get('citzen_login_client_id');

  $application_line = __LINE__ - 1;

  $client->client_secret = variable_get('citzen_login_app_secret');

  if (strlen($client->client_id) == 0 || strlen($client->client_secret) == 0) {
    return t('Please go to Meu RS Apps page https://meu.rs.gov.br/dev , ' . 'create an application, and in the line  @application_line set the client_id to Consumer key and client_secret with Consumer secret. The Callback URL must be @redirect_uri If you want to post to ' . 'the user timeline, make sure the application you create has write permissions', array('@application_line' => $application_line, ' @redirect_uri' => $client->redirect_uri));
  }

  // API Permissions.
  $scope = array('id', 'username', 'picture', 'email');
  // Call hook alter.
  drupal_alter('citzen_login_scope', $scope);

  $client->scope = implode(' ', $scope);

  if (($success = $client->Initialize())) {
    if (($success = $client->Process())) {
      if (strlen($client->authorization_error)) {
        $client->error = $client->authorization_error;
        $success = false;
      }
      elseif (strlen($client->access_token)) {
        $success = $client->CallAPI('https://meu.rs.gov.br/api/v1/person', 'GET', array(), array(
            'FailOnAccessError' => true
        ), $user_rs);

        $user = citzen_login_create_user($user_rs);
        // Redirect to edit profile
        drupal_goto("user/{$user->uid}/edit");
      }
    }
  }
}

/**
 * Form constructor for login cidadao settings.
 *
 * @ingroup forms
 */
function citzen_login_settings_form($form, &$form_state) {
  // Client ID field.
  $form['citzen_login_client_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Client ID'),
    '#default_value' => variable_get('citzen_login_client_id', NULL),
  );
  // App Secret field.
  $form['citzen_login_app_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('App Secret'),
    '#default_value' => variable_get('citzen_login_app_secret', NULL),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_block_info().
 */
function citzen_login_block_info() {
  $blocks['citzen_login'] = array(
    'info' => t('Citzen\'s Login'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function citzen_login_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'citzen_login' :
      $block['content'] = theme('citzen_login_button');
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function citzen_login_theme() {
  return array(
    'citzen_login_button' => array(
      'function' => 'theme_citzen_login_button',
    ),
  );
}

/**
 * This function create new user.
 *
 * @param object $user_rs
 *   Login cidadão object.
 */
function citzen_login_create_user($user_rs) {
  $password = user_password();
  // User data.
  $new_user = array(
    'name' => $user_rs->username,
    'mail' => $user_rs->email,
    'init' => $user_rs->email,
    'access' => REQUEST_TIME,
    'status' => 1,
    'pass' => $password,
  );

  // Save user.
  $account = user_save(NULL, $new_user);
  // Change current user.
  global $user;
  $user = $account;

  drupal_set_message(t('Your password is @pass. Please change this.', array('@pass' => $password)), 'warning');

  return $account;
}

/*
 * Implements hook_form_alter().
 */
function citzen_login_form_user_login_alter(&$form, &$form_state, $form_id) {
  $btn = theme('citzen_login_button');
  $form['citzen-login-link'] = array(
    '#markup' => $btn,
  );
}

/**
 * Theme function for login button.
 */
function theme_citzen_login_button(&$variables) {
  $btn = l(t('Citzen\'s Login'), 'user/citzen-login/connect', array('attributes' => array('class' => array('btn-citizen-login'))));

  return $btn;
}
